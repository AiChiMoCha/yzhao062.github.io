[{"authors":["yue-zhao"],"categories":null,"content":"Bio. üêé I will join USC Computer Science as an Assistant Professor at in August 2023 (more details on intern/visitor, graduate student, and postdoc recruitment to follow.)\nI got my Ph.D. in 4 years at Carnegie Mellon University (CMU). My research accelerates and automates unsupervised ML: (1) how to support large-scale learning tasks with ML systems and (2) how to automate unsupervised ML model selection and hyperparameter optimization. I build AI/ML applications in finance, healthcare, and security.\nPh.D. time. At CMU, I work with Prof. Leman Akoglu for automated ML, Prof. Zhihao Jia for machine learning systems, and Prof. George H. Chen for general ML. I am a member of CMU automated learning systems group (Catalyst) and Data Analytics Techniques Algorithms (DATA) Lab. I have collaborated with Prof. Jure Leskovec at Stanford and Prof. Philip S. Yu at UIC.\n Open-source Contribution: I have led or contributed as a core member to more than 10 ML open-source initiatives, receiving 16,000 GitHub stars (top 0.002%: ranked 800 out of 40M GitHub users) and \u0026gt;12,000,000 total downloads.\nI am a dedicated writer with more than 300 articles (in Chinese) and 200,000 followers on Zhihu (Áü•‰πé) \u0026mdash; Chinese Quora (200 million+ registered users). I have been officially recognized as a \u0026ldquo;Top Writer\u0026rdquo; (‰ºòÁßÄÂõûÁ≠îËÄÖ) in four fields (AI, ML, DM, and STAT). My articles have been read by more than 20,000,000 times. See my Zhihu page (ÂæÆË∞É).\nContact me by Email (yzhao062 [AT] gmail.com) or WeChat @ yzhao062. Of course, please add my WeChat for a good reason, e.g., collaboration and visiting, since everyone is busy :)\n","date":1699920000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1699920000,"objectID":"018dfaed6f44763cc1b3541f2e6c6063","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/authors/yue-zhao/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/user/yuezhao2/authors/yue-zhao/","section":"authors","summary":"Bio. üêé I will join USC Computer Science as an Assistant Professor at in August 2023 (more details on intern/visitor, graduate student, and postdoc recruitment to follow.)\nI got my Ph.D. in 4 years at Carnegie Mellon University (CMU). My research accelerates and automates unsupervised ML: (1) how to support large-scale learning tasks with ML systems and (2) how to automate unsupervised ML model selection and hyperparameter optimization. I build AI/ML applications in finance, healthcare, and security.","tags":null,"title":"Yue Zhao","type":"authors"},{"authors":["Peng Xu","Lin Zhang","Xuanzhou Liu","Jiaqi Sun","Yue Zhao","Haiqin Yang","Bei Yu"],"categories":[],"content":"","date":1699920000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1699920000,"objectID":"366fdbb0857bbea1c6509ec7b35f5e4a","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/23-icml-nac/","publishdate":"2023-04-14T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/23-icml-nac/","section":"publication","summary":"","tags":["Neural Architecture Search","Graph neural network","Automated Machine Learning"],"title":"Do Not Train It: A Linear Neural Architecture Search of Graph Neural Networks","type":"publication"},{"authors":["Yue Zhao","George H. Chen","Zhihao Jia"],"categories":[],"content":"","date":1697241600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1697241600,"objectID":"c2bf81599302f17c5a8c5a1b7f00e0ea","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/23-vldb-tod/","publishdate":"2022-10-14T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/23-vldb-tod/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"TOD: GPU-accelerated Outlier Detection via Tensor Operations","type":"publication"},{"authors":["Martin Q. Ma","Yue Zhao","Xiaorong Zhang","Leman Akoglu"],"categories":[],"content":"","date":1685577600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1685577600,"objectID":"4e4942ea58fc7c10727425a88bc66566","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/23-kdd-explorations-ipm/","publishdate":"2022-12-01T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/23-kdd-explorations-ipm/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"The Need for Unsupervised Outlier Model Selection: A Review and Evaluation of Internal Evaluation Strategies","type":"publication"},{"authors":["Yue Zhao","Guoqing Zheng","Subhabrata Mukherjee","Robert McCann","Ahmed Awadallah"],"categories":[],"content":"","date":1676332800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676332800,"objectID":"ccb0d0d63b463273631b39d367c160df","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/23-aaai-admoe/","publishdate":"2022-11-14T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/23-aaai-admoe/","section":"publication","summary":"","tags":["outlier detection","enmsemble learning"],"title":"ADMoE: Anomaly Detection with Mixture-of-Experts from Noisy Labels","type":"publication"},{"authors":["Songqiao Han","Xiyang Hu","Hailiang Huang","Minqi Jiang","Yue Zhao"],"categories":[],"content":"","date":1663200000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663200000,"objectID":"cacbbfd84af834126b7059f5eafec064","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-neurips-adbench/","publishdate":"2022-09-15T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-neurips-adbench/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"ADBench: Anomaly Detection Benchmark","type":"publication"},{"authors":["Kay Liu","Yingtong Dou","Yue Zhao","Xueying Ding","Xiyang Hu","Ruitong Zhang","Kaize Ding","Canyu Chen","Hao Peng","Kai Shu","Lichao Sun","Jundong Li","George H. Chen","Zhihao Jia","Philip S. Yu"],"categories":[],"content":"","date":1663113600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663113600,"objectID":"ed63205358d6cda1c1f867b5925d6da9","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-neurips-bond/","publishdate":"2022-09-14T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-neurips-bond/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"BOND: Benchmarking Unsupervised Outlier Node Detection on Static Attributed Graphs","type":"publication"},{"authors":["Yue Zhao","Sean Zhang","Leman Akoglu"],"categories":[],"content":"","date":1660262715,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660262715,"objectID":"0ba9f228e648e7617bbaa622405e619d","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-icdm-elect/","publishdate":"2022-08-12T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-icdm-elect/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"ELECT: Toward Unsupervised Outlier Model Selection","type":"publication"},{"authors":null,"categories":null,"content":"","date":1658016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1658016000,"objectID":"58d6255a8d4be68b23fe9600971c3d87","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/adbench/","publishdate":"2022-07-17T00:00:00Z","relpermalink":"/user/yuezhao2/project/adbench/","section":"project","summary":"ADBench Anomaly Detection Benchmark","tags":["Machine Learning","Data Mining","Outlier Detection"],"title":"ADBench","type":"project"},{"authors":["Kexin Huang","Tianfan Fu","Wenhao Gao","Yue Zhao","Yusuf Roohani","Jure Leskovec","Connor W. Coley","Cao Xiao","Jimeng Sun","Marinka Zitnik"],"categories":[],"content":"","date":1656633600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656633600,"objectID":"7977d7c4dc7d83eb214cf37f86414e8f","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-nature-tdc/","publishdate":"2022-07-17T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-nature-tdc/","section":"publication","summary":"","tags":["AI for Science","Drug Discovery"],"title":"Artificial Intelligence Foundation for Therapeutic Science","type":"publication"},{"authors":null,"categories":null,"content":"","date":1648771200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1648771200,"objectID":"e3cc860627817958319bfbcebacbb6e7","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/pygod/","publishdate":"2022-04-01T00:00:00Z","relpermalink":"/user/yuezhao2/project/pygod/","section":"project","summary":"A Python Library for Graph Outlier Detection (Anomaly Detection) and Its Benchmark","tags":["Outlier Detection","Machine Learning","Graph Neural Networks","Learning Systems"],"title":"PyGOD (Python Graph Outlier Detection)","type":"project"},{"authors":["Yue Zhao","Zheng Li","Xiyang Hu","Nicola Botta","Cezar Ionescu","George H. Chen"],"categories":[],"content":"","date":1646093115,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646093115,"objectID":"9575c37632b8af05f61d0c42b9b598ca","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-tkde-ecod/","publishdate":"2022-03-01T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-tkde-ecod/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"ECOD: Unsupervised Outlier Detection Using Empirical Cumulative Distribution Functions","type":"publication"},{"authors":["Zhiming Xu","Xiao Huang","Yue Zhao","Yushun Dong","Jundong Li"],"categories":[],"content":"","date":1641945915,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641945915,"objectID":"c9077a918f68c30d3022e59bccbcad56","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/22-pakdd/","publishdate":"2022-01-12T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/22-pakdd/","section":"publication","summary":"","tags":["outlier detection","graph"],"title":"Contrastive Attributed Network Anomaly Detection with Data Augmentation","type":"publication"},{"authors":["Yue Zhao","Ryan Rossi","Leman Akoglu"],"categories":[],"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"cc68360b2d0cace1b687339d1584c1f9","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/21-neurips-metaod/","publishdate":"2021-09-16T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/21-neurips-metaod/","section":"publication","summary":"","tags":["outlier detection","Python","AutoML"],"title":"Automatic Unsupervised Outlier Model Selection","type":"publication"},{"authors":["Kwei-Herng Lai","Daochen Zha","Junjie Xu","Yue Zhao","Guanchu Wang","Xia Hu"],"categories":[],"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"3f6a9f9a77821e370477fd2ce37c7696","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/21-neurips-tods/","publishdate":"2021-07-16T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/21-neurips-tods/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"Revisiting Time Series Outlier Detection: Definitions and Benchmarks","type":"publication"},{"authors":["Kexin Huang","Tianfan Fu","Wenhao Gao","Yue Zhao","Yusuf Roohani","Jure Leskovec","Connor W. Coley","Cao Xiao","Jimeng Sun","Marinka Zitnik"],"categories":[],"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"cf12125a1d154f7a41518136deaa6b2f","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/21-neurips-tdc/","publishdate":"2021-07-17T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/21-neurips-tdc/","section":"publication","summary":"","tags":["AI for Science","Drug Discovery"],"title":"Therapeutics Data Commons: Machine Learning Datasets and Tasks for Drug Discovery and Development","type":"publication"},{"authors":["Yue Zhao","Xiyang Hu","Cheng Cheng","Cong Wang","Changlin Wan","Wen Wang","Jianing Yang","Haoping Bai","Zheng Li","Cao Xiao","Yunlong Wang","Zhi Qiao","Jimeng Sun","Leman Akoglu"],"categories":[],"content":"","date":1617408000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617408000,"objectID":"e5d9b603dacf7d9b27441261eaf93998","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/21-mlsys-suod/","publishdate":"2021-01-17T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/21-mlsys-suod/","section":"publication","summary":"Outlier detection (OD) is a key data mining task for identifying abnormal objects from general samples with numerous high-stake applications including fraud detection and intrusion detection. Due to the lack of ground truth labels, practitioners often have to build a large number of unsupervised models that are heterogeneous (i.e., different algorithms and hyperparameters) for further combination and analysis with ensemble learning, rather than relying on a single model. However, this yields severe scalability issues on high-dimensional, large datasets.\nHow to accelerate the training and predicting with a large number of heterogeneous unsupervised OD models? How to ensure the acceleration does not deteriorate detection models' accuracy? How to accommodate the acceleration need for both a single worker setting and a distributed system with multiple workers? In this study, we propose a three-module acceleration system called SUOD (scalable unsupervised outlier detection) to address these questions. It focuses on three complementary aspects to accelerate (dimensionality reduction for high-dimensional data, model approximation for complex models, and execution efficiency improvement for taskload imbalance within distributed systems), while controlling detection performance degradation. Extensive experiments on more than 20 benchmark datasets demonstrate SUOD's effectiveness in heterogeneous OD acceleration. By the submission time, the released open-source system has been widely used with more than 700,000 times downloads. A real-world deployment case on fraudulent claim analysis at IQVIA, a leading healthcare firm, is also provided.","tags":["outlier detection","Python","MLSys"],"title":"SUOD: Accelerating Large-scale Unsupervised Heterogeneous Outlier Detection","type":"publication"},{"authors":["Kwei-Herng Lai","Daochen Zha","Guanchu Wang","Junjie Xu","Yue Zhao","Devesh Kumar","Yile Chen","Purav Zumkhawaka","Minyang Wan","Diego Martinez","Xia Ben Hu"],"categories":[],"content":"","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"6c63c7feea6b920c2d2c0d53602796ea","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/21-aaai-tods/","publishdate":"2020-10-22T10:05:15+08:00","relpermalink":"/user/yuezhao2/publication/21-aaai-tods/","section":"publication","summary":"","tags":["machine learning","ensemble learning","Python"],"title":"TODS: An Automated Time Series Outlier Detection System","type":"publication"},{"authors":null,"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"afddf5702fcba7cc7cbf68e20567ca97","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/tdc/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/user/yuezhao2/project/tdc/","section":"project","summary":"Machine Learning Datasets and Tasks for Drug Discovery and Development","tags":["Machine Learning","Drug Discovery","Learning Systems"],"title":"Therapeutics Data Commons (TDC)","type":"project"},{"authors":["Changlin Wan","Dongya Jia","Yue Zhao","Wennan Chang","Sha Cao","Xiao Wang","Chi Zhang"],"categories":[],"content":"","date":1602461115,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602461115,"objectID":"0940162dd50bf258c5fe6bba0c10ea90","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-bibm-cibs/","publishdate":"2020-10-12T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-bibm-cibs/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"A Data Denoising Approach to Optimize Functional Clustering of Single Cell RNA-sequencing Data","type":"publication"},{"authors":["Meng-Chieh Lee","Yue Zhao","Aluna Wang","Pierre Jinghong Liang","Leman Akoglu","Vincent S. Tseng","Christos Faloutsos"],"categories":[],"content":"","date":1602461115,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602461115,"objectID":"043f247a85bbe30ca1e056562f711afa","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-bigdata-autoaudit/","publishdate":"2020-10-12T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-bigdata-autoaudit/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"AutoAudit: Mining Accounting and Time-Evolving Graphs","type":"publication"},{"authors":["Zheng Li","Yue Zhao","Nicola Botta","Cezar Ionescu","Xiyang Hu"],"categories":[],"content":"","date":1597190715,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597190715,"objectID":"22f2aebbedd01f90bd476ac9f1770b2f","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-icdm-copod/","publishdate":"2020-08-12T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-icdm-copod/","section":"publication","summary":"Outlier detection refers to the identification of rare items that are deviant from the general data distribution. Existing unsupervised approaches suffer from high computational complexity, low predictive capability, and limited interpretability. As a remedy, we present a novel outlier detection algorithm called COPOD, which is inspired by statistical methods for modeling multivariate data distribution. COPOD first constructs the empirical copula, and then uses the fitted model to predict tail probabilities of each given data point to determine its level of \"extremeness\". Intuitively, we think of this as calculating an anomalous p-value. This makes COPOD both parameter-free, highly interpretable, as well as computationally efficient. Moreover, COPOD is parameter-free and require no tuning, which reduces human subjectivity and bias. In this work, we make three key contributions, 1) propose a novel, parameter-free outlier detection algorithm with both great performance and interpretability, 2) perform extensive experiments on 30 benchmark datasets to show that COPOD outperforms in most cases, at the same time is also one of the fastest outlier detection algorithms, and 3) release an easy-to-use Python implementation for reproducibility.","tags":["outlier detection","Python"],"title":"COPOD: Copula-Based Outlier Detection","type":"publication"},{"authors":["Zheng Li","Yue Zhao","Jialin Fu"],"categories":[],"content":"","date":1593561600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593561600,"objectID":"e0e913f332cf9845a6300194a2cf9d4c","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-icdmw-sync/","publishdate":"2019-01-01T01:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-icdmw-sync/","section":"publication","summary":"A synthetic dataset is a data object that is generated programmatically, and it may be valuable to creating a single dataset from multiple sources when direct collection is difficult or costly. Although it is a fundamental step for many data science tasks, an efficient and standard framework is absent. In this paper, we study a specific synthetic data generation task called **downscaling**, a procedure to infer high-resolution, harder-to-collect information (e.g., individual level records) from many low-resolution, easy-to-collect sources, and propose a multi-stage framework called SynC (**Syn**thetic Data Generation via Gaussian **C**opula). For given low-resolution datasets, the central idea of SynC is to fit Gaussian copula models to each of the low-resolution datasets in order to correctly capture dependencies and marginal distributions, and then sample from the fitted models to obtain the desired high-resolution subsets. Predictive models are then used to merge sampled subsets into one, and finally, sampled datasets are scaled according to low-resolution marginal constraints. We make four key contributions in this work: 1) propose a novel framework for generating individual level data from aggregated data sources by combining state-of-the-art machine learning and statistical techniques, 2) perform simulation studies to validate SynC's performance as a synthetic data generation algorithm, 3) demonstrate its value as a feature engineering tool, as well as an alternative to data collection in situations where gathering is difficult through two real-world datasets, 4) release an easy-to-use framework implementation for reproducibility and scalability at the production level that easily incorporates new data.","tags":["synthetic population","Python"],"title":"SynC: A Copula based Framework for Generating Synthetic Data from Aggregated Sources","type":"publication"},{"authors":["Yiqun Mei","Yue Zhao","Wei Liang"],"categories":[],"content":"","date":1583021115,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583021115,"objectID":"a3d830ce877abf9e94db6d85a12e610d","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-icme-dsr/","publishdate":"2020-03-01T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-icme-dsr/","section":"publication","summary":"Recently, convolution neural networks based approaches have achieved unprecedented success for image super resolution. However, such methods typically assume a predetermined degradation that deviates from real-world cases, resulting in poor performance frequently. To improve upon this, researchers have proposed multiple methods to handle super-resolution under various degradations. Despite, such methods fail to capture an accurate image prior, which is a crucial part for reconstructing image details. In this work, we propose a novel framework called Decoupled Super Resolver (DSR) with both promising performance and applicability. DSR employs an LR Finer to project a degraded image back to its clean version and a Combinational Super Resolver to retrieve a more comprehensive and accurate prior. The latter module further enables DSR to output high-resolution images by combining both image-specific knowledge and sophisticated external knowledge. Extensive experiments under various degradation settings demonstrate the effectiveness of DSR by setting new state-of-the-arts on multiple benchmarks.","tags":["outlier detection","Python"],"title":"DSR: An Accurate Single Image Super Resolution Approach for Various Degradations","type":"publication"},{"authors":["Yue Zhao","Xuejian Wang","Cheng Cheng","Xueying Ding"],"categories":[],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"53de7c8807b216ec05a80c2823ef77fd","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-aaai-combo/","publishdate":"2019-10-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-aaai-combo/","section":"publication","summary":"Model combination, often regarded as a key sub-field of ensemble learning, has been widely used in both academic research and industry applications. To facilitate this process, we propose and implement an easy-to-use Python toolkit, combo, to aggregate models and scores under various scenarios, including classification, clustering, and anomaly detection. In a nutshell, combo provides a unified and consistent way to combine the learning models from popular machine learning libraries, e.g., scikit-learn, XGBoost, and LightGBM. With accessibility and robustness in mind, combo is designed with detailed documentation, interactive examples, continuous integration, code coverage, and maintainability check; it can be installed easily through Python Package Index (PyPI) or https://github.com/yzhao062/combo.","tags":["machine learning","ensemble learning","Python"],"title":"Combining Machine Learning Models Using combo Library","type":"publication"},{"authors":null,"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"722beaa16b5ead6b7205753b4959be1b","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/suod/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/user/yuezhao2/project/suod/","section":"project","summary":"SUOD Accelerating Large-scale Unsupervised Heterogeneous Outlier Detection","tags":["Machine Learning","Data Mining","Anomaly Detection","Learning Systems"],"title":"SUOD","type":"project"},{"authors":["Colin Wan","Zheng Li","Alicia Guo","Yue Zhao"],"categories":[],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"d4dd4093ba6740d98fe2dd94e2c5e493","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/20-aaai-sync/","publishdate":"2019-01-01T01:05:15+08:00","relpermalink":"/user/yuezhao2/publication/20-aaai-sync/","section":"publication","summary":"Synthetic population generation is the process of combining multiple socioeonomic and demographic datasets from various sources and at different granularity, and downscaling them to an individual level. Although it is a fundamental step for many data science tasks, an efficient and standard framework is absent. In this study, we propose a multi-stage framework called SynC (Synthetic Population via Gaussian Copula) to fill the gap. SynC first removes potential outliers in the data and then fits the filtered data with a Gaussian copula model to correctly capture dependencies and marginal distributions of sampled survey data. Finally, SynC leverages neural networks to merge datasets into one and then scales them accordingly to match the marginal constraints. We make four key contributions in this work: 1) propose a novel framework for generating individual level data from aggregated data sources by combining state-of-the-art machine learning and statistical techniques, 2) design a metric for validating the accuracy of generated data when the ground truth is hard to obtain, 3) demonstrate its effectiveness with the Canada National Census data and presenting two real-world use cases where datasets of this nature can be leveraged by businesses, and 4) release an easy-to-use framework implementation for reproducibility.","tags":["outlier detection","Python"],"title":"SynC: A Unified Framework for Generating Synthetic Population with Gaussian Copula","type":"publication"},{"authors":["Yue Zhao","Zain Nasrullah","Zheng Li"],"categories":[],"content":"","date":1563753915,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563753915,"objectID":"ac02caf242b6eb22823e8ad5b052a35c","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/19-jmlr-pyod/","publishdate":"2019-07-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/19-jmlr-pyod/","section":"publication","summary":"PyOD is an open-source Python toolbox for performing scalable outlier detection on multivariate data. Uniquely, it provides access to a wide range of outlier detection algorithms, including established outlier ensembles and more recent neural network-based approaches, under a single, well-documented API designed for use by both practitioners and researchers. With robustness and scalability in mind, best practices such as unit testing, continuous integration, code coverage, maintainability checks, interactive examples and parallelization are emphasized as core components in the toolbox's development. PyOD is compatible with both Python 2 and 3 and can be installed through Python Package Index (PyPI) or https://github.com/yzhao062/pyod","tags":["outlier detection","Python"],"title":"PyOD: A Python Toolbox for Scalable Outlier Detection","type":"publication"},{"authors":["Zain Nasrullah","Yue Zhao"],"categories":[],"content":"","date":1563408315,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563408315,"objectID":"a7a457caddd88efa8e951f33f96a637e","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/19-ijcnn-music/","publishdate":"2019-07-18T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/19-ijcnn-music/","section":"publication","summary":"Previous attempts at music artist classification use frame level audio features which summarize frequency content within short intervals of time. Comparatively, more recent music information retrieval tasks take advantage of temporal structure in audio spectrograms using deep convolutional and recurrent models. This paper revisits artist classification with this new framework and empirically explores the impacts of incorporating temporal structure in the feature representation. To this end, an established classification architecture, a Convolutional Recurrent Neural Network (CRNN), is applied to the artist20 music artist identification dataset under a comprehensive set of conditions. These include audio clip length, which is a novel contribution in this work, and previously identified considerations such as dataset split and feature level. Our results improve upon baseline works, verify the influence of the producer effect on classification performance and demonstrate the trade-offs between audio length and training set size. The best performing model achieves an average F1 score of 0.937 across three independent trials which is a substantial improvement over the corresponding baseline under similar conditions. Additionally, to showcase the effectiveness of the CRNN's feature extraction capabilities, we visualize audio samples at the model's bottleneck layer demonstrating that learned representations segment into clusters belonging to their respective artists.","tags":["deep learning","machine learning"],"title":"Music Artist Classification with Convolutional Recurrent Neural Networks","type":"publication"},{"authors":null,"categories":null,"content":"","date":1563321600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563321600,"objectID":"5dfa8165456795dc73365a5c51684e7f","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/combo/","publishdate":"2019-07-17T00:00:00Z","relpermalink":"/user/yuezhao2/project/combo/","section":"project","summary":"A Python Toolbox for Machine Learning Model Combination.","tags":["Machine Learning","Data Mining"],"title":"combo","type":"project"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python\rimport pandas as pd\rdata = pd.read_csv(\u0026quot;data.csv\u0026quot;)\rdata.head()\r```\r renders as\nimport pandas as pd\rdata = pd.read_csv(\u0026#34;data.csv\u0026#34;)\rdata.head()\rMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file or by adding math: true to your page front matter.\nNote that math blocks should be wrapped with \u0026lt;div\u0026gt;...\u0026lt;/div\u0026gt; and inline math wrapped with \u0026lt;span\u0026gt;...\u0026lt;/span\u0026gt; as otherwise your math will be parsed as Markdown.\n\u0026lt;div\u0026gt;$$\r\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}\r{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}\r$$\u0026lt;/div\u0026gt;\rrenders as\n\r$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$\r\rOr inline math like *`$\\gamma_{n} = \\frac{\\mathbf x_{n}}{y}$`* renders as $\\gamma_{n} = \\frac{\\mathbf x_{n}}{y}$.\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid\rgraph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\r```\r renders as\ngraph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\rAn example sequence diagram:\n```mermaid\rsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\r```\r renders as\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\rAn example Gantt diagram:\n```mermaid\rgantt\rdateFormat YYYY-MM-DD\rsection Section\rA task :a1, 2014-01-01, 30d\rAnother task :after a1 , 20d\rsection Another\rTask in sec :2014-01-12 , 12d\ranother task : 24d\r```\r renders as\ngantt\rdateFormat YYYY-MM-DD\rsection Section\rA task :a1, 2014-01-01, 30d\rAnother task :after a1 , 20d\rsection Another\rTask in sec :2014-01-12 , 12d\ranother task : 24d\rTodo lists You can even write your todo lists in Academic too:\n- [x] Write math example\r- [x] Write diagram example\r- [ ] Do something else\rrenders as\n Write math example Write diagram example Do something else  ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"7792524a0fc41e7e3ae70efbf1669876","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/post/writing/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/user/yuezhao2/post/writing/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Yue Zhao","Zain Nasrullah","Maciej K. Hryniewicki","Zheng Li"],"categories":[],"content":"","date":1558483515,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558483515,"objectID":"ec21e71874f1ca32c46eabd337c43f43","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/19-sdm-lscp/","publishdate":"2019-05-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/19-sdm-lscp/","section":"publication","summary":"In unsupervised outlier ensembles, the absence of ground truth makes the combination of base outlier detectors a challenging task. Specifically, existing parallel outlier ensembles lack a reliable way of selecting competent base detectors, affecting accuracy and stability, during model combination. In this paper, we propose a framework‚Äîcalled Locally Selective Combination in Parallel Outlier Ensembles (LSCP)-- which addresses the issue by defining a local region around a test instance using the consensus of its nearest neighbors in randomly selected feature subspaces. The top-performing base detectors in this local region are selected and combined as the model's final output. Four variants of the LSCP framework are compared with seven widely used parallel frameworks. Experimental results demonstrate that one of these variants, LSCP_AOM, consistently outperforms baselines on the majority of twenty real-world datasets.","tags":["outlier detection","Python"],"title":"LSCP: Locally Selective Combination in Parallel Outlier Ensembles","type":"publication"},{"authors":["Yue Zhao","Maciej K. Hryniewicki"],"categories":[],"content":"","date":1537574715,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537574715,"objectID":"7e743f3e5521647b8a8840a1aca0adeb","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/18-ijcnn-xgbod/","publishdate":"2018-09-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/18-ijcnn-xgbod/","section":"publication","summary":"A new semi-supervised ensemble algorithm called XGBOD (Extreme Gradient Boosting Outlier Detection) is proposed, described and demonstrated for the enhanced detection of outliers from normal observations in various practical datasets. The proposed framework combines the strengths of both supervised and unsupervised machine learning methods by creating a hybrid approach that exploits each of their individual performance capabilities in outlier detection. XGBOD uses multiple unsupervised outlier mining algorithms to extract useful representations from the underlying data that augment the predictive capabilities of an embedded supervised classifier on an improved feature space. The novel approach is shown to provide superior performance in comparison to competing individual detectors, the full ensemble and two existing representation learning based algorithms across seven outlier datasets.","tags":["outlier detection","Python"],"title":"XGBOD: Improving Supervised Outlier Detection with Unsupervised Representation Learning","type":"publication"},{"authors":["Yue Zhao","Maciej K. Hryniewicki"],"categories":[],"content":"","date":1535155515,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535155515,"objectID":"09e238921ecdffe605b2f786a9a7de9b","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/18-kdd-dcso/","publishdate":"2018-08-25T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/18-kdd-dcso/","section":"publication","summary":"","tags":["outlier detection","Python"],"title":"DCSO: Dynamic Combination of Detector Scores for Outlier Ensembles","type":"publication"},{"authors":["Yue Zhao","Maciej K. Hryniewicki","Francesca Cheng","Boyang Fu","Xiaoyu Zhu"],"categories":[],"content":"","date":1534896315,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534896315,"objectID":"7323854ef7dc690b03d4fe4aefe858fb","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/18-intellisys-employee/","publishdate":"2018-08-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/18-intellisys-employee/","section":"publication","summary":"Supervised machine learning methods are described, demonstrated and assessed for the prediction of employee turnover within an organization. In this study, numerical experiments for real and simulated human resources datasets representing organizations of small-, medium- and large-sized employee populations are performed using (1) a decision tree method; (2) a random forest method; (3) a gradient boosting trees method; (4) an extreme gradient boosting method; (5) a logistic regression method; (6) support vector machines; (7) neural networks; (8) linear discriminant analysis; (9) a Na√Øve Bayes method; and (10) a K-nearest neighbor method. Through a robust and comprehensive evaluation process, the performance of each of these supervised machine learning methods for predicting employee turnover is analyzed and established using statistical methods. Additionally, reliable guidelines are provided on the selection, use and interpretation of these methods for the analysis of human resources datasets of varying size and complexity.","tags":["machine learning"],"title":"Employee Turnover Prediction with Machine Learning: A Reliable Approach","type":"publication"},{"authors":null,"categories":null,"content":"PyOD is the most popular detection toolbox with more than 2,000 GitHub stars and 80,000 downloads on PyPI. Its accompanied paper is published in Journal of Machine Learning Research (JMLR) .\n JMLR Link: http://www.jmlr.org/papers/v20/19-011.html Github : https://github.com/yzhao062/pyod PyPI: https://pypi.org/project/pyod Documentation: https://pyod.readthedocs.io Interactive Jupyter Notebooks: https://mybinder.org/v2/gh/yzhao062/pyod/master  PyOD is a comprehensive and efficient Python toolkit to identify outlying objects in multivariate data. This exciting yet challenging field is commonly referred as Outlier Detection or Anomaly Detection. Since 2017, PyOD has been successfully used in various academic researches and commercial products. It is featured for:\n Unified APIs, detailed documentation, and interactive examples across various algorithms. Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles. Optimized performance with JIT and parallelization when possible, using numba and joblib. Compatible with both Python 2 \u0026amp; 3.  PyOD toolkit consists of three major groups of functionalities:\n outlier detection algorithms; outlier ensemble frameworks and outlier detection utility functions.  Comparison of all implemented models are made available below:\n","date":1527379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527379200,"objectID":"072f9d1d99352ff1249d29ea67e3736c","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/project/pyod/","publishdate":"2018-05-27T00:00:00Z","relpermalink":"/user/yuezhao2/project/pyod/","section":"project","summary":"PyOD--A Python Toolbox for Scalable Outlier Detection (Anomaly Detection).","tags":["Machine Learning"],"title":"Python Outlier Detection Toolbox","type":"project"},{"authors":["Yue Zhao","Zhongtian Qiu","Yiqing Yang","Weiwei Li","Mingming Fan"],"categories":[],"content":"","date":1506038715,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506038715,"objectID":"91567b7674c3d886725175d842897130","permalink":"https://www.andrew.cmu.edu/user/yuezhao2/publication/17-iswc-smartwatch/","publishdate":"2017-09-22T08:05:15+08:00","relpermalink":"/user/yuezhao2/publication/17-iswc-smartwatch/","section":"publication","summary":"The emergence of smartwatches poses new challenges to information security. Although there are mature touch-based authentication methods for smartphones, the effectiveness of using these methods on smartwatches is still unclear. We conducted a user study (n=16) to evaluate how authentication methods (PIN and Pattern), UIs (Square and Circular), and display sizes (38mm and 42mm) affect authentication accuracy, speed, and security. Circular UIs are tailored to smartwatches with fewer UI elements. Results show that 1) PIN is more accurate and secure than Pattern; 2) Pattern is much faster than PIN; 3) Square UIs are more secure but less accurate than Circular UIs; 4) display size does not affect accuracy or speed, but security; 5) Square PIN is the most secure method of all. The study also reveals a security concern that participants' favorite method is not the best in any of the measures. We finally discuss implications for future touch-based smartwatch authentication design.","tags":["outlier detection","Python"],"title":"An empirical study of touch-based authentication methods on smartwatches","type":"publication"}]